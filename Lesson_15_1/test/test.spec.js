const Calculation = require('./common/fun');

describe('Calculator', function () {
    describe('add', () => {

        it('Сложение натуральных чисел.', () => {
            Calculation.add([9, 9], 18);
        });

        it('Сложение дробных чисел.', () => {
            Calculation.add([1.2, 1.2, 4.5], 6.9);
        });

        it('Сложение отрицательных чисел.', () => {
            Calculation.add([-3, -8, -3.25], -14.25);
        });

        it('Сложение положительного и отрицательного чисел.', () => {
            Calculation.add([-5, 6], 1);
        });

        it('Сложение  чисел одно из которых равно нулю.', () => {
            Calculation.add([10, 0, 5, 0], 15);
        });

        it('Сложение больших чисел .', () => {
            Calculation.add([9157188254740995, 100000000000000], 9257188254740995);
        });
        //Найдена ошибка в программе
        it('Сложение нескольких нуля+ дробное .', () => {
            Calculation.add([0, 0, 1], 0.1);
        });
        it('Сложение числа с нулем .', () => {
            Calculation.add([100, 0], 100);
        });
        it('Сложение одного агрумента.', () => {
            Calculation.add([9], 9);
        });
        it('Сложение при отсутствии агрументов.', () => {
            Calculation.add([], 0);
        });
        it('Сложение чисел с большой лробной частью.', () => {
            Calculation.add([1.789456123, 2.123456789], 3.912912912);
        });
        //Найдена ошибка в программе
        it('Сложение чисел Ошибка (округления).', () => {
            Calculation.add([-99.9, 9], -108.9);
        });

    });
    describe('multiply', () => {

        it('Умножение натуральных чисел.', () => {
            Calculation.multiply([2, 3], 6);
        });
        //Найдена ошибка в программе
        it('Умножение дробных чисел.', () => {
            Calculation.multiply([1.2, 1.2, 4.5], 6.48);
        });

        it('Умножение отрицательных чисел.', () => {
            Calculation.multiply([-3, -8, -3.25], -78);
        });

        it('Умножение положительного и отрицательного чисел.', () => {
            Calculation.multiply([-5, 6], -30);
        });

        it('Умножение  чисел одно из которых равно нулю.', () => {
            Calculation.multiply([10, 0, 5, 0], 0);
        });
        //Найдена ошибка в программе
        it('Умножение больших чисел .', () => {
            Calculation.multiply([9157188254740995, 100000000000000], 915718825474099500000000000000);
        });
        it('Умножение нескольких нулей .', () => {
            Calculation.multiply([0, 0.5], 0);
        });
        it('Умножение числа с нулем .', () => {
            Calculation.multiply([100, 0], 0);
        });
        it('Умножение одного агрумента.', () => {
            Calculation.multiply([9], 9);
        });
        //Найдена ошибка в программе
        it('Умножение при отсутствии агрументов.', () => {
            Calculation.multiply([], 0);
        });
        //Найдена ошибка в программе
        it('Умножение чисел с большой лробной частью.', () => {
            Calculation.multiply([1.789456123, 2.123456789], 3.799832753001969047);
        });
        //Найдена ошибка в программе 
        it('Умножение чисел Ошибка (округления).', () => {
            Calculation.multiply([-99.9, 9], -899.19);
        });
        //Найдена ошибка в программе
        it('Умножение  отрицательного дробноых чисел со смещением запятой на 1 знак.', () => {
            Calculation.multiply([-19.1, 0.5], 9.55);
        });

        describe('subtraction', () => {

            it('Вычитание натуральных чисел.', () => {
                Calculation.subtraction([2, 3], -1);
            });
            it('Вычитание дробных чисел.', () => {
                Calculation.subtraction([1.2, 1.2], 0);
            });

            it('Вычитание отрицательных чисел.', () => {
                Calculation.subtraction([-3, -8,], 5);
            });

            it('Вычитание  отрицательного и положительного и чисел.', () => {
                Calculation.subtraction([-5, 6], -11);
            });

            it('Вычитание чисел одно из которых равно нулю.', () => {
                Calculation.subtraction([10, 0], 10);
            });

            it('Вычитание больших чисел .', () => {
                Calculation.subtraction([9157188254740995, 100000000000000], 9057188254740995);
            });
            it('Вычитание нескольких нулей .', () => {
                Calculation.subtraction([0, 0.10], -0.1);
            });
            it('Вычитание числа с нулем .', () => {
                Calculation.subtraction([0, 100], -100);
            });
            //Найдена ошибка в программе
            it('Вычитание чисел с большой лробной частью.', () => {
                Calculation.subtraction([1.789456123, 2.123456789], -0.334000666);
            });

            it('Вычитание чисел Ошибка (округления).', () => {
                Calculation.subtraction([-99.9, 9], -108.9);
            });

            describe('divide', () => {

                it('Деление натуральных чисел.', () => {
                    Calculation.divide([9, 9], 1);
                });
                it('Деление дробных чисел.', () => {
                    Calculation.divide([1.2, 1.2], 1);
                });

                it('Деление отрицательных чисел.', () => {
                    Calculation.divide([-15, -3,], 5);
                });

                it('Деление положительного и отрицательного чисел.', () => {
                    Calculation.divide([-36, 6], -6);
                });
                //Найдена ошибка в программе
                it('Деление чисел одно из которых равно нулю.', () => {
                    Calculation.divide([10, 0], inFinite);
                });

                it('Деление больших чисел .', () => {
                    Calculation.divide([9157188254740995, 100000000000000], 91.57188254740995);
                });

                //Найдена ошибка в программе
                it('Деление нескольких нулей .', () => {
                    Calculation.divide([0, 0.9], inFinite);
                });
                it('Деление числа с нулем .', () => {
                    Calculation.divide([0, 100], 0);
                });
                //Найдена ошибка в программе
                it('Деление чисел с большой лробной частью.', () => {
                    Calculation.divide([1.789456123, 2.123456789], 0.8427089886028286);
                });
                //Найдена ошибка в программе
                it('Деление чисел Ошибка. (дробное и целое)', () => {
                    Calculation.divide([-99.9, 9], -11.1);
                });

                describe('exponentiation', () => {

                    it(' Возведение в  квалрат натурального чисел.', () => {
                        Calculation.exponentiation([3], 9);
                    });
                    //Найдена ошибка в программе
                    it('Возведение в квалрат дробного числа.', () => {
                        Calculation.exponentiation([0.05], 0.0025);
                    });

                    it('Возведение в квалрат отрицательных чисел.', () => {
                        Calculation.exponentiation([-8], 64);
                    });

                    it('Возведение в квалрат числа  ноль.', () => {
                        Calculation.exponentiation([0], 0);
                    });
                    //Найдена ошибка в программе
                    it('Возведение в квалрат больших чисел .', () => {
                        Calculation.exponentiation([9157188254740995], 83854096732766429937094533590025);
                    });
                    //Найдена ошибка в программе
                    it('Возведение в квалрат чисел с большой дробной частью.', () => {
                        Calculation.exponentiation([1.789456123], 3.2021532161421911);
                    });
                });
            });
        })
    })
})
